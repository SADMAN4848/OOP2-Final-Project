<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABEAFQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+6WWRroyySTJqJ1GIWc09oPJj1yOESsumaarMDaXlsR5k1w/y
        Og2g8EojkzebuP2r7bH/AGfL5GI/7VitvO2aNY5YfZ9Rsdv+k3T4SXY2Mc7Bn8/L+ZHe/a1+z+bYr9mi
        1by1lb+z9ITev2DUIMb57v5PNQbd3H7tCfMzz9o+0brX/Rj5P9o+T53/ABKtN+dfseq2e3/TL75PP2N8
        3/PMAVyZvN3H7V9tj/s+XyMR/wBqxW3nbNGscsPs+o2O3/Sbp8JLsbGOdnlHxs+O/wAGf2dvh9rXxX+P
        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
        2Q==
</value>
  </data>
</root>